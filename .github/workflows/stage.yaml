name: Staging Deploy via SST to AWS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            .next/
            .open-next/
            .sst/
          key: cache-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            cache-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Install AWS Creds
        run: |
            mkdir -p ~/.aws
            echo "[default]" > ~/.aws/credentials
            echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
            echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
      - name: Set SST Config secret
        run: |
          npx sst secrets set DATABASE_URL '${{ secrets.DATABASE_URL_STAGING }}' --stage staging
          npx sst secrets set COMMIT_SHA '${{ github.sha }}' --stage staging
      - name: Run Prisma Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_STAGING }}
        run: npx prisma migrate deploy
      - name: Deploy to AWS with SST
        run: npm run deployStaging
      - name: Clean up AWS Profile
        run: rm -rf ~/.aws
#      - run: npm ci
#      - run: npm test
